/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.24
 * Generated at: 2019-08-26 23:57:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.topazerp.sales.StaffStatus;
import java.util.*;
import java.sql.Date;
import java.sql.*;
import java.sql.SQLException;
import java.text.DecimalFormat;
import com.topazerp.sales.*;
import java.lang.NullPointerException;
import javax.servlet.ServletContext;
import com.topazerp.sales.SalesOperations;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.topazerp.sales");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.topazerp.sales.StaffStatus");
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("com.topazerp.sales.SalesOperations");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("javax.servlet.ServletContext");
    _jspx_imports_classes.add("java.lang.NullPointerException");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n");
      out.write("    \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("        <link rel=\"icon\"  type=\"image/png\" href=\"images/favicon.png\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <title>JSP Page</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("\r\n");
      out.write("        ");


            //SET time_zone = "+00:00"; select now(); use to log user out after 6pm.

            session = request.getSession(false);


            SalesOperations salesOpx = new SalesOperations();


            Calendar cal = new GregorianCalendar();
            cal = SalesOperations.convertCalendar(cal, TimeZone.getTimeZone("Africa/Lagos"));
           

            StaffStatus staff = null;
            String responseMessage = "Invalid Login";


            String username = request.getParameter("username");
            String password = request.getParameter("password");
            String branch = request.getParameter("branch");

            staff = salesOpx.Signin(username, password);

            String next = "";

            //request.getSession(false);
            //cal.get(Calendar.DAY_OF_WEEK) != cal.get(Calendar.SUNDAY))
            


            if (request.getParameter("login") != null
                    //&& cal.get(Calendar.HOUR_OF_DAY) < 23
                    //&& cal.get(Calendar.DAY_OF_WEEK) != 1
                    && staff != null
                    && staff.getPassword().equals(password)
                    && staff.getBranch().equals(branch)
                    && staff.getStatus().equals("Active")
                    && username.equals(username)) {


                if (staff.getDepartment().equals("Sales") && staff.getJobType().equals("Cashier")) {

                    session.setAttribute("username", staff.getUsername());
                    session.setAttribute("LOGIN_USER", staff);
                    next = "odicsales.jsp";


                } else if (staff.getDepartment().equals("Sales") && staff.getJobType().equals("Cashier-Temp")) {

                    session.setAttribute("username", staff.getUsername());
                    session.setAttribute("LOGIN_USER", staff);
                    next = "odicsales.jsp";


                }
                else if (staff.getDepartment().equals("Sales") && staff.getJobType().equals("Cashier-Others")) {

                    session.setAttribute("username", staff.getUsername());
                    session.setAttribute("LOGIN_USER", staff);
                    next = "odicsales.jsp";


                }
                
                

                response.sendRedirect(next);



            } else {

                response.sendRedirect("index.jsp?responseMessage=" + responseMessage);

            }





































            /* if (userid.equals("") && branch.equals("")) {
            next = "index.jsp";
            } else if (userid.equals("Admin") && !branch.equals("")) {
            // auth.insertlog(username);
            String date = "";
            String time = "";
            Statement st2 = con.createStatement();
            String sequel = "select date(now()), curtime() from admin";
            ResultSet rs = st2.executeQuery(sequel);
            if (rs.next()) {
            date = rs.getString(1);
            time = rs.getString(2);
            }
            String sql = "insert into log values(null, ?, '" + date + "', '" + CT + "')";
            PreparedStatement st = con.prepareStatement(sql);
            
            st.setString(1, username);
            int i = st.executeUpdate();
            
            next = "welcome.jsp";
            } else if (userid.equals("Customer Service") && !branch.equals("")) {
            // auth.insertlog(username);
            String date = "";
            String time = "";
            Statement st2 = con.createStatement();
            String sequel = "select date(now()), curtime() from admin";
            ResultSet rs = st2.executeQuery(sequel);
            if (rs.next()) {
            date = rs.getString(1);
            time = rs.getString(2);
            }
            String sql = "insert into log values(null, ?, '" + date + "', '" + CT + "')";
            PreparedStatement st = con.prepareStatement(sql);
            
            st.setString(1, username);
            int i = st.executeUpdate();
            
            next = "transaction.jsp";
            
            } else if (userid.equals("operation dept") && !branch.equals("")) {
            // auth.insertlog(username);
            String date = "";
            String time = "";
            Statement st2 = con.createStatement();
            String sequel = "select date(now()), curtime() from admin";
            ResultSet rs = st2.executeQuery(sequel);
            if (rs.next()) {
            date = rs.getString(1);
            time = rs.getString(2);
            }
            String sql = "insert into log values(null, ?, '" + date + "', '" + CT + "')";
            PreparedStatement st = con.prepareStatement(sql);
            
            st.setString(1, username);
            int i = st.executeUpdate();
            
            next = "operation1.jsp";
            } else if (userid.equals("Manager") && !branch.equals("")) {
            // auth.insertlog(username);
            String date = "";
            String time = "";
            Statement st2 = con.createStatement();
            String sequel = "select date(now()), curtime() from admin";
            ResultSet rs = st2.executeQuery(sequel);
            if (rs.next()) {
            date = rs.getString(1);
            time = rs.getString(2);
            }
            String sql = "insert into log values(null, ?, '" + date + "', '" + CT + "')";
            PreparedStatement st = con.prepareStatement(sql);
            
            st.setString(1, username);
            int i = st.executeUpdate();
            
            next = "operation2.jsp";
            } else {
            next = "index.jsp";
            }
            session.setAttribute("userid", userid);
            session.setAttribute("staffDetails", staff);
            session.setAttribute("level", id);
            
            session.setAttribute("username", username.toUpperCase());
            session.setAttribute("mybranch", branch.toUpperCase());
            
             */

        
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
